{"version":3,"sources":["App.js","index.js"],"names":["TopDisplay","_ref","totalCalories","goal","setGoal","cookieKey","cookies","items","React","createElement","className","type","value","onChange","event","goalValue","parseInt","target","set","_toConsumableArray","path","App","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","setItems","_useState5","_useState6","foodEntry","setFoodEntry","_useState7","_useState8","calorieEntry","setCalorieEntry","_useState9","_useState10","setTotalCalories","countCalories","newItem","total","calories","forEach","item","Cookies","retrieved","get","length","class","Button","onClick","food","id","Date","getTime","concat","map","newItems","filter","x","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.b4218cfb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { Button } from 'react-bootstrap';\nimport Cookies from 'universal-cookie';\n\nconst TopDisplay = ({ totalCalories, goal, setGoal, cookieKey, cookies, items }) => \n{\n  return (\n    <div className='container'>\n          <div className='row'> \n            <div className='col-sm-4'>\n              <h1>Calories</h1>\n              <h2>{totalCalories}</h2>\n            </div>\n            <div className='col-sm-4'>\n              <h1>Goal</h1>\n              <input className='marginSmall goalNumberWidth' type=\"number\" value={goal} onChange={(event) => {\n                let goalValue = parseInt(event.target.value) ? parseInt(event.target.value) : 0;\n                setGoal(goalValue);\n                cookies.set(cookieKey, {items: [...items], goal: goalValue}, {path: '/'});\n                }}/>\n            </div>\n          </div>\n        </div>\n  );\n};\n\nfunction App() {\n\n  const [goal, setGoal] = useState(0);\n  const [items, setItems] = useState([]);\n  const [foodEntry, setFoodEntry] = useState(\"Bagel\");\n  const [calorieEntry, setCalorieEntry] = useState(100);\n  const [totalCalories, setTotalCalories] = useState(0);\n\n  const countCalories = (newItem) => {\n    let total = 0;\n\n    if(newItem)\n    {\n      total += newItem.calories;\n    }\n    \n    items.forEach(item => {\n      total += item.calories;\n    });\n    setTotalCalories(total);\n  };\n\n  // Load Cookies if found...\n  const cookies = new Cookies();\n  const cookieKey = 'myCalorieCount';\n  let retrieved = cookies.get(cookieKey);\n\n  if(retrieved && (!items || items.length === 0))\n  {\n    if(retrieved.items.length)\n    {\n      setItems(retrieved.items);\n      countCalories();\n    }\n\n    if(retrieved.goal && goal === 0)\n    {\n      setGoal(retrieved.goal);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>\n          <TopDisplay totalCalories={totalCalories} goal={goal} setGoal={setGoal} cookieKey={cookieKey} cookies={cookies} items={items}/>\n          <div class=\"container marginTop\">\n            <div class=\"row\">\n              <div class=\"col-sm-4 marginSmall\">\n                Food\n              </div>\n              <div class=\"col-sm-2 marginSmall\">\n                Calories\n              </div>\n              <div class=\"col-sm-2 marginSmall\"/>\n            </div>\n            <div className='row'>\n              <input className='col-sm-4 marginSmall' type=\"text\" value={foodEntry} onChange={(event) => {setFoodEntry(event.target.value); }}/>\n              <input className='col-sm-2 marginSmall' type=\"number\" value={calorieEntry} onChange={(event) => {setCalorieEntry(parseInt(event.target.value) ? parseInt(event.target.value) : 0)}}/>\n              <Button className='col-sm-2 marginSmall btn btn-primary' onClick={() => {\n                let newItem = {food: foodEntry, calories: calorieEntry, id: new Date().getTime()};\n                setItems([...items, newItem]);\n                setFoodEntry('');\n                setCalorieEntry(0);\n                countCalories(newItem);\n                cookies.set(cookieKey, {items: [...items, newItem], goal: goal}, {path: '/'});\n              }}>Add</Button>\n            </div>\n            {items.map(item => (\n              <li>\n                <div class=\"row\">\n                  <div class=\"col-sm-4 marginSmall item\">\n                    {item.food}\n                  </div>\n                  <div class=\"col-sm-2 marginSmall item\">\n                    {item.calories}\n                  </div>\n                  <Button className='col-sm-2 marginSmall btn btn-danger' onClick={() => {\n                    let newItems = [...items.filter(x => x.id !== item.id)];\n                    if(!newItems) {\n                      newItems = [];\n                    }\n                    setItems(newItems);\n                    countCalories();\n                    cookies.set(cookieKey, {items: newItems, goal: goal}, {path: '/'});\n                  }}>Delete</Button>\n                </div>\n              </li>\n            ))}\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}